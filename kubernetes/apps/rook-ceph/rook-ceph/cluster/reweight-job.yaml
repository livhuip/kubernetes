---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cluster-reweight
  namespace: rook-ceph
spec:
  schedule: "0 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          volumes:
            - name: ceph-admin-secret
              secret:
                secretName: rook-ceph-mon
                items:
                  - key: ceph-secret
                    path: secret.keyring
                defaultMode: 420
                optional: false
            - name: mon-endpoint-volume
              configMap:
                name: rook-ceph-mon-endpoints
                items:
                  - key: data
                    path: mon-endpoints
                defaultMode: 420
            - name: ceph-config
              emptyDir: {}
          containers:
            - name: reweight
              image: quay.io/ceph/ceph:v19.2.0-20240927
              command:
                - /bin/bash
                - '-c'
                - >
                  # Replicate the script from toolbox.sh inline so the ceph image

                  # can be run directly, instead of requiring the rook toolbox

                  CEPH_CONFIG="/etc/ceph/ceph.conf"

                  MON_CONFIG="/etc/rook/mon-endpoints"

                  KEYRING_FILE="/etc/ceph/keyring"


                  # create a ceph config file in its default location so ceph/rados
                  tools can be used

                  # without specifying any arguments

                  write_endpoints() {
                    endpoints=$(cat $${MON_CONFIG})

                    # filter out the mon names
                    # external cluster can have numbers or hyphens in mon names, handling them in regex
                    # shellcheck disable=SC2001
                    mon_endpoints=$(echo "$${endpoints}"| sed 's/[a-z0-9_-]\+=//g')

                    DATE=$(date)
                    echo "$DATE"
                    echo "Writing mon endpoints to $${CEPH_CONFIG}: $${endpoints}"
                      cat <<EOF > $${CEPH_CONFIG}
                  [global]

                  mon_host = $${mon_endpoints}


                  [client.admin]

                  keyring = $${KEYRING_FILE}

                  EOF

                  }


                  # watch the endpoints config file and update if the mon endpoints ever
                  change

                  watch_endpoints() {
                    # get the timestamp for the target of the soft link
                    real_path=$(realpath $${MON_CONFIG})
                    initial_time=$(stat -c %Z "$${real_path}")
                    while true; do
                      real_path=$(realpath $${MON_CONFIG})
                      latest_time=$(stat -c %Z "$${real_path}")

                      if [[ "$${latest_time}" != "$${initial_time}" ]]; then
                        write_endpoints
                        initial_time=$${latest_time}
                      fi

                      sleep 10
                    done
                  }


                  # read the secret from an env var (for backward compatibility), or
                  from the secret file

                  ceph_secret=$${ROOK_CEPH_SECRET}

                  if [[ "$ceph_secret" == "" ]]; then
                    ceph_secret=$(cat /var/lib/rook-ceph-mon/secret.keyring)
                  fi


                  # create the keyring file

                  cat <<EOF > $${KEYRING_FILE}

                  [$${ROOK_CEPH_USERNAME}]

                  key = $${ceph_secret}

                  EOF


                  # write the initial config file

                  write_endpoints

                  echo "Running ceph osd reweight-by-utilization"

                  ceph osd reweight-by-utilization
              env:
                - name: ROOK_CEPH_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: rook-ceph-mon
                      key: ceph-username
              volumeMounts:
                - name: ceph-config
                  mountPath: /etc/ceph
                - name: mon-endpoint-volume
                  mountPath: /etc/rook
                - name: ceph-admin-secret
                  mountPath: /var/lib/rook-ceph-mon
              imagePullPolicy: IfNotPresent
              securityContext:
                capabilities:
                  drop:
                    - ALL
                runAsUser: 2016
                runAsGroup: 2016
                runAsNonRoot: true
          restartPolicy: OnFailure
          dnsPolicy: ClusterFirstWithHostNet
          serviceAccountName: rook-ceph-default
          serviceAccount: rook-ceph-default
          hostNetwork: true
          schedulerName: default-scheduler
          tolerations:
            - key: node.kubernetes.io/unreachable
              operator: Exists
              effect: NoExecute
              tolerationSeconds: 5
